syntax = "proto3";

package ids;

// The main IDS service
service IDS {
    // Process a single log entry and check for malicious content
    rpc ProcessLog (LogEntry) returns (ProcessResult) {}
    
    // Simple health check to verify server is running
    rpc HealthCheck (HealthCheckRequest) returns (HealthCheckResponse) {}
}

// Represents a log entry from a client
message LogEntry {
    string timestamp = 1;      // When the request happened
    string type = 2;          // Type of log (e.g., "REQUEST")
    string ip = 3;           // Source IP address
    string method = 4;       // HTTP method (GET, POST, etc.)
    string path = 5;         // Request path
    map<string, string> headers = 6;  // HTTP headers
    string body = 7;         // Request body
    string client_id = 8;    // Identifier for the client sending the log
}

// Result of processing a log entry
message ProcessResult {
    bool injection_detected = 1;           // Whether an attack was detected
    string message = 2;                    // Detailed message about what was found
    repeated string matched_rules = 3;     // Names of rules that matched, if any
}

// Simple messages for health checking
message HealthCheckRequest {
    string client_id = 1;    // ID of the client checking health
}

message HealthCheckResponse {
    bool is_healthy = 1;     // Whether the server is healthy
}